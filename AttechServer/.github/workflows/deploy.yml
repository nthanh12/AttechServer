name: Build and Deploy to Ubuntu Server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      
    - name: Publish
      run: dotnet publish -c Release -o ./publish
      
    - name: Build Docker image
      run: docker build -t attechserver:${{ github.sha }} .
      
    - name: Save Docker image
      run: docker save attechserver:${{ github.sha }} > attechserver.tar
      
    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: attechserver.tar
        
    - name: Deploy to Ubuntu Server
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # Download Docker image
          wget -O attechserver.tar ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
          
          # Load Docker image
          docker load < attechserver.tar
          
          # Stop existing container
          docker stop attechserver || true
          docker rm attechserver || true
          
          # Run new container
          docker run -d \
            --name attechserver \
            --restart unless-stopped \
            -p 5000:5000 \
            -v /var/www/uploads:/app/uploads \
            -e ASPNETCORE_ENVIRONMENT=Production \
            -e BASE_URL=https://api.attech.space \
            attechserver:${{ github.sha }}
          
          # Health check
          sleep 10
          curl -f http://localhost:5000/health || exit 1
          
          # Cleanup old images
          docker image prune -f 