<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AttechServer</name>
    </assembly>
    <members>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactEmailService.SendCustomerConfirmationAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Send confirmation email to customer
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactEmailService.SendAdminNotificationAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Send notification email to admin/support team
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactEmailService.SendAutoResponseAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto,System.Int32)">
            <summary>
            Send auto-response email with estimated response time
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactEmailService.SendFollowUpEmailAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto,System.Int32)">
            <summary>
            Send follow-up email if no response after certain time
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactEmailService.SendServiceDepartmentNotificationAsync(System.Collections.Generic.List{AttechServer.Applications.UserModules.Dtos.Contact.ContactDto},System.String)">
            <summary>
            Send service department notification with customer list
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactNotificationService.NotifyAdminNewContactAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Send real-time notification to admin when new contact is received
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactNotificationService.NotifyAdminContactStatusChangedAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto,System.Int32,System.Int32)">
            <summary>
            Send real-time notification when contact status is updated
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactNotificationService.NotifyAdminUrgentContactAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Send real-time notification for urgent contacts
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactNotificationService.UpdateUnreadContactCountAsync(System.Int32)">
            <summary>
            Update real-time contact count for admin dashboard
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.Submit(AttechServer.Applications.UserModules.Dtos.Contact.CreateContactDto,System.String,System.String)">
            <summary>
            Submit contact form (Public API)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all contact messages with filtering and sorting (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.FindById(System.Int32)">
            <summary>
            Get contact message detail by ID (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.UpdateStatus(System.Int32,AttechServer.Applications.UserModules.Dtos.Contact.UpdateContactStatusDto)">
            <summary>
            Update contact message status (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.Delete(System.Int32)">
            <summary>
            Delete contact message (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.MarkAsRead(System.Int32)">
            <summary>
            Mark contact message as read (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.MarkAsUnread(System.Int32)">
            <summary>
            Mark contact message as unread (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IContactService.GetUnreadCount">
            <summary>
            Get unread contact count (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.CreateCrmTicketAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Create a new ticket/lead in CRM system when contact is submitted
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.UpdateCrmTicketStatusAsync(System.String,System.Int32)">
            <summary>
            Update CRM ticket status when contact status changes
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.SyncCustomerToCrmAsync(AttechServer.Applications.UserModules.Dtos.Contact.ContactDto)">
            <summary>
            Sync contact information to CRM customer database
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.AddCrmTicketNoteAsync(System.String,System.String,System.String)">
            <summary>
            Add note to CRM ticket
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.IsCrmIntegrationEnabled">
            <summary>
            Check if CRM integration is enabled and configured
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.ICrmIntegrationService.TestCrmConnectionAsync">
            <summary>
            Test CRM connection
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả danh mục tin tức với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết danh mục tin tức theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết danh mục tin tức theo slug
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.Create(AttechServer.Applications.UserModules.Dtos.NewsCategory.CreateNewsCategoryDto)">
            <summary>
            Thêm mới danh mục tin tức
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.Update(AttechServer.Applications.UserModules.Dtos.NewsCategory.UpdateNewsCategoryDto)">
            <summary>
            Cập nhật danh mục tin tức
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.Delete(System.Int32)">
            <summary>
            Xóa danh mục tin tức
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsCategoryService.UpdateStatus(System.Int32,System.Int32)">
            <summary>
            Cập nhật trạng thái danh mục tin tức
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả tin tức với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách tin tức theo slug danh mục, bao gồm cả category chính và sub-categories
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết tin tức theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết tin tức theo slug (song ngữ)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.Create(AttechServer.Applications.UserModules.Dtos.News.CreateNewsDto)">
            <summary>
            Thêm mới tin tức với tất cả dữ liệu (text + files) trong một request
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateNewsDto)">
            <summary>
            Cập nhật tin tức
            ID được truyền riêng, không cần trong DTO
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.Delete(System.Int32)">
            <summary>
            Xóa tin tức
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.CreateAlbum(AttechServer.Applications.UserModules.Dtos.News.CreateAlbumDto)">
            <summary>
            Tạo album (news với IsAlbum = true)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetAlbums(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách albums (news với IsAlbum = true)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetAlbumByIdForAdmin(System.Int32)">
            <summary>
            Lấy chi tiết album theo ID cho admin
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindAlbumBySlug(System.String)">
            <summary>
            Lấy chi tiết album theo slug
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetGalleryBySlug(System.String)">
            <summary>
            Lấy thông tin gallery của tin tức theo slug
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.UpdateAlbum(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateAlbumDto)">
            <summary>
            Cập nhật album (simplified version for albums only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindAllForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tin tức đã xuất bản (status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindBySlugForClient(System.String)">
            <summary>
            Lấy thông tin chi tiết tin tức theo slug (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.FindAllByCategorySlugForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách tin tức theo slug danh mục (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.SearchForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Tìm kiếm tin tức đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedAlbumsForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách albums đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedAlbumBySlugForClient(System.String)">
            <summary>
            Lấy chi tiết album đã xuất bản theo slug cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetAlbumGalleryForClient(System.String)">
            <summary>
            Lấy gallery album cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedAlbumsByCategoryForClient(System.String,AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy albums theo category đã xuất bản cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetFeaturedAlbumsForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy albums nổi bật đã xuất bản cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.CreateDocument(AttechServer.Applications.UserModules.Dtos.News.CreateDocumentDto)">
            <summary>
            Tạo document (news với IsDocument = true)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetDocuments(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách documents (news với IsDocument = true)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetDocumentByIdForAdmin(System.Int32)">
            <summary>
            Lấy chi tiết document theo ID cho admin
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.UpdateDocument(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateDocumentDto)">
            <summary>
            Cập nhật document (simplified version for documents only)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedDocumentsForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách documents đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedDocumentBySlugForClient(System.String)">
            <summary>
            Lấy chi tiết document đã xuất bản theo slug cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetPublishedDocumentsByCategoryForClient(System.String,AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy documents theo category đã xuất bản cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INewsService.GetFeaturedDocumentsForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy documents nổi bật đã xuất bản cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả danh mục thông báo với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết danh mục thông báo theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết danh mục thông báo theo slug
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.Create(AttechServer.Applications.UserModules.Dtos.NotificationCategory.CreateNotificationCategoryDto)">
            <summary>
            Thêm mới danh mục thông báo
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.Update(AttechServer.Applications.UserModules.Dtos.NotificationCategory.UpdateNotificationCategoryDto)">
            <summary>
            Cập nhật danh mục thông báo
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.Delete(System.Int32)">
            <summary>
            Xóa danh mục thông báo
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationCategoryService.UpdateStatus(System.Int32,System.Int32)">
            <summary>
            Cập nhật trạng thái danh mục thông báo
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả thông báo với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách thông báo theo slug danh mục, bao gồm cả category chính và sub-categories
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết thông báo theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết thông báo theo slug (song ngữ)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.Create(AttechServer.Applications.UserModules.Dtos.Notification.CreateNotificationDto)">
            <summary>
            Thêm mới thông báo với tất cả dữ liệu (text + files) trong một request
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Notification.UpdateNotificationDto)">
            <summary>
            Cập nhật thông báo
            ID được truyền riêng, không cần trong DTO
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.Delete(System.Int32)">
            <summary>
            Xóa thông báo
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindAllForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách thông báo đã xuất bản (status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindBySlugForClient(System.String)">
            <summary>
            Lấy thông tin chi tiết thông báo theo slug (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.FindAllByCategorySlugForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách thông báo theo slug danh mục (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.INotificationService.SearchForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Tìm kiếm thông báo đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            L?y danh s�ch danh m?c b�i vi?t v?i ph�n trang
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.FindById(System.Int32)">
            <summary>
            L?y th�ng tin chi ti?t danh m?c b�i vi?t
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.FindBySlug(System.String)">
            <summary>
            L?y th�ng tin chi ti?t danh m?c b�i vi?t theo slug
            </summary>
            <param name="slug"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.Create(AttechServer.Applications.UserModules.Dtos.ProductCategory.CreateProductCategoryDto)">
            <summary>
            Th�m m?i danh m?c b�i vi?t
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.Update(AttechServer.Applications.UserModules.Dtos.ProductCategory.UpdateProductCategoryDto)">
            <summary>
            C?p nh?t danh m?c b�i vi?t
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.Delete(System.Int32)">
            <summary>
            X�a nh�m b�i vi?t
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductCategoryService.UpdateStatusProductCategory(System.Int32,System.Int32)">
            <summary>
            Kh�a/M? kh�a nh�m b�i vi?t
            </summary>
            <param name="id"></param>
            <param name="status">Tr?ng th�i m?i</param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả sản phẩm với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách sản phẩm theo slug danh mục, bao gồm cả category chính và sub-categories
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết sản phẩm theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết sản phẩm theo slug (song ngữ)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.Create(AttechServer.Applications.UserModules.Dtos.Product.CreateProductDto)">
            <summary>
            Thêm mới sản phẩm với tất cả dữ liệu (text + files) trong một request
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Product.UpdateProductDto)">
            <summary>
            Cập nhật sản phẩm
            ID được truyền riêng, không cần trong DTO
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.Delete(System.Int32)">
            <summary>
            Xóa sản phẩm
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindAllForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách sản phẩm đã xuất bản (status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindBySlugForClient(System.String)">
            <summary>
            Lấy thông tin chi tiết sản phẩm theo slug (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.FindAllByCategorySlugForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Lấy danh sách sản phẩm theo slug danh mục (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IProductService.SearchForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Tìm kiếm sản phẩm đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IRoleService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Danh sách nhóm quyền
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IRoleService.FindById(System.Int32)">
            <summary>
            Thông tin chi tiết nhóm quyền
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IRoleService.Create(AttechServer.Applications.UserModules.Dtos.Role.CreateRoleDto)">
            <summary>
            Thêm mới nhóm quyền
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IRoleService.Update(AttechServer.Applications.UserModules.Dtos.Role.UpdateRoleDto)">
            <summary>
            Cập nhật nhóm quyền
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IRoleService.Delete(System.Int32)">
            <summary>
            Xóa nhóm quyền
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách tất cả dịch vụ với phân trang
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.FindById(System.Int32)">
            <summary>
            Lấy thông tin chi tiết dịch vụ theo Id
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.FindBySlug(System.String)">
            <summary>
            Lấy thông tin chi tiết dịch vụ theo slug (song ngữ)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.Create(AttechServer.Applications.UserModules.Dtos.Service.CreateServiceDto)">
            <summary>
            Thêm mới dịch vụ với tất cả dữ liệu (text + files) trong một request
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Service.UpdateServiceDto)">
            <summary>
            Cập nhật dịch vụ
            ID được truyền riêng, không cần trong DTO
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.Delete(System.Int32)">
            <summary>
            Xóa dịch vụ
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.FindAllForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Lấy danh sách dịch vụ đã xuất bản (status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.FindBySlugForClient(System.String)">
            <summary>
            Lấy thông tin chi tiết dịch vụ theo slug (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IServiceService.SearchForClient(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Tìm kiếm dịch vụ đã xuất bản (chỉ status = 1) cho client
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IUserService.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            L?y danh s�ch ngu?i d�ng
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IUserService.FindById(System.Int32)">
            <summary>
            L?y th�ng tin ngu?i d�ng theo ID
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IUserService.Update(AttechServer.Applications.UserModules.Dtos.User.UpdateUserDto)">
            <summary>
            C?p nh?t th�ng tin ngu?i d�ng
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Abstracts.IUserService.Delete(System.Int32)">
            <summary>
            X�a ngu?i d�ng
            </summary>
        </member>
        <member name="P:AttechServer.Applications.UserModules.Dtos.News.DocumentDetailDto.Documents">
            <summary>
            Danh sách tài liệu đính kèm
            </summary>
        </member>
        <member name="P:AttechServer.Applications.UserModules.Dtos.News.UpdateDocumentDto.Status">
            <summary>
            Trạng thái
            0 = Nháp, 1 = Xuất bản, 2 = Ẩn
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.DetectRelationType(System.String)">
            <summary>
            Auto-detect relation type based on file content type
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.DetermineFileCategory(System.String,System.String)">
            <summary>
            Xác định loại thư mục dựa trên content type và relation type
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.MoveFromTempToPermanentAsync(AttechServer.Domains.Entities.Main.Attachment)">
            <summary>
            Move file from temp folder to permanent folder with yyyy/MM structure
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.SoftDeleteEntityAttachmentsAsync(AttechServer.Shared.ApplicationBase.Common.ObjectType,System.Int32)">
            <summary>
            Soft delete all attachments associated with an entity
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.SoftDeleteOldFeaturedImageAsync(AttechServer.Shared.ApplicationBase.Common.ObjectType,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Soft delete old featured image (IsPrimary = true) for an entity, excluding specific attachment IDs
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.SoftDeleteAttachmentsByIdsAsync(System.Collections.Generic.List{System.Int32})">
            <summary>
            Soft delete specific attachments by IDs
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.GetCurrentGalleryAttachmentIdsAsync(AttechServer.Shared.ApplicationBase.Common.ObjectType,System.Int32)">
            <summary>
            Get current attachment IDs for an entity (excluding featured image)
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.AttachmentService.GetCurrentFeaturedImageIdAsync(AttechServer.Shared.ApplicationBase.Common.ObjectType,System.Int32)">
            <summary>
            Get current featured image ID for an entity
            </summary>
        </member>
        <member name="T:AttechServer.Applications.UserModules.Implements.CacheKeys">
            <summary>
            Cache key generators for different entity types
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.NewsService.DeleteAssociatedFilesAsync(System.Int32)">
            <summary>
            Delete all files associated with a news article
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.NotificationService.DeleteAssociatedFilesAsync(System.Int32)">
            <summary>
            Delete all files associated with a notification article
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.ProductService.DeleteAssociatedFilesAsync(System.Int32)">
            <summary>
            Delete all files associated with a product article
            </summary>
        </member>
        <member name="M:AttechServer.Applications.UserModules.Implements.ServiceService.DeleteAssociatedFilesAsync(System.Int32)">
            <summary>
            Delete all files associated with a service article
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ApiEndpointController.FindAll">
            <summary>
            Get api endpoint list
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ApiEndpointController.FindById(System.Int32)">
            <summary>
            Get API Endpoint by ID
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ApiEndpointController.Create(CreateApiEndpointDto)">
            <summary>
            Create new API Endpoint
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ApiEndpointController.Update(System.Int32,CreateApiEndpointDto)">
            <summary>
            Update API Endpoint
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ApiEndpointController.Delete(System.Int32)">
            <summary>
            Delete API Endpoint
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.AttachmentController.CleanupTempFiles">
            <summary>
            Cleanup temp files older than specified hours (background task endpoint)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:AttechServer.Controllers.AuthController" -->
        <member name="M:AttechServer.Controllers.AuthController.Login(AttechServer.Applications.UserModules.Dtos.UserLoginDto)">
            <summary>
            Login
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.AuthController.Register(AttechServer.Applications.UserModules.Dtos.CreateUserDto)">
            <summary>
            Create user (only for admin)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.AuthController.RefreshToken(AttechServer.Applications.UserModules.Dtos.TokenApiDto)">
            <summary>
            Refresh token
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.AuthController.GetCurrentUser">
            <summary>
            Get current user info 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.AuthController.Logout">
            <summary>
            Log out
            </summary>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.AuthController.ChangePassword(AttechServer.Applications.UserModules.Dtos.User.ChangePasswordDto)">
            <summary>
            Change password
            </summary>
            <param name="changePasswordDto"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.ClientAlbumController.GetPublishedAlbums(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all published albums (status = 1) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientAlbumController.GetAlbumBySlug(System.String)">
            <summary>
            Get album detail by slug (published only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientAlbumController.GetAlbumGallery(System.String)">
            <summary>
            Get album gallery by slug
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientAlbumController.GetAlbumsByCategory(System.String,AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get albums by category (published only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientAlbumController.GetFeaturedAlbums(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get featured/outstanding albums (published only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all news categories for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsCategoryController.FindById(System.Int32)">
            <summary>
            Get news category by ID for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsCategoryController.FindBySlug(System.String)">
            <summary>
            Get news category by slug for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all published news (status = 1) with caching for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsController.FindBySlug(System.String)">
            <summary>
            Get published news detail by slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get published news by category slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNewsController.Search(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Search published news by keyword (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all notification categories for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationCategoryController.FindById(System.Int32)">
            <summary>
            Get notification category by ID for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationCategoryController.FindBySlug(System.String)">
            <summary>
            Get notification category by slug for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all published notification (status = 1) with caching for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationController.FindBySlug(System.String)">
            <summary>
            Get published notification detail by slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get published notification by category slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientNotificationController.Search(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Search published notification by keyword (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all product categories for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductCategoryController.FindById(System.Int32)">
            <summary>
            Get product category by ID for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductCategoryController.FindBySlug(System.String)">
            <summary>
            Get product category by slug for client with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all published products (status = 1) with caching for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductController.FindBySlug(System.String)">
            <summary>
            Get published product detail by slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get published products by category slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientProductController.Search(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Search published products by keyword (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientServiceController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all published service (status = 1) with caching for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientServiceController.FindBySlug(System.String)">
            <summary>
            Get published service detail by slug (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ClientServiceController.Search(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Search published service by keyword (status = 1 only) for client
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.Submit(AttechServer.Applications.UserModules.Dtos.Contact.CreateContactDto)">
            <summary>
            Submit contact form (Public API)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all contact messages with filtering and sorting (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.FindById(System.Int32)">
            <summary>
            Get contact message detail by ID (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.UpdateStatus(System.Int32,AttechServer.Applications.UserModules.Dtos.Contact.UpdateContactStatusDto)">
            <summary>
            Update contact message status (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.MarkAsRead(System.Int32)">
            <summary>
            Mark contact message as read (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.MarkAsUnread(System.Int32)">
            <summary>
            Mark contact message as unread (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.Delete(System.Int32)">
            <summary>
            Delete contact message (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.GetUnreadCount">
            <summary>
            Get unread contact count (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ContactController.GetClientIpAddress">
            <summary>
            Get client IP address from request
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.HealthController.Get">
            <summary>
            Health check endpoint for monitoring
            </summary>
            <returns>Health status</returns>
        </member>
        <member name="M:AttechServer.Controllers.HealthController.GetDetailed">
            <summary>
            Detailed health check with database connectivity
            </summary>
            <returns>Detailed health status</returns>
        </member>
        <member name="M:AttechServer.Controllers.NewsCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all news categories with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsCategoryController.FindById(System.Int32)">
            <summary>
            Get news category by ID with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsCategoryController.Create(AttechServer.Applications.UserModules.Dtos.NewsCategory.CreateNewsCategoryDto)">
            <summary>
            Create new news category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsCategoryController.Update(AttechServer.Applications.UserModules.Dtos.NewsCategory.UpdateNewsCategoryDto)">
            <summary>
            Update news category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsCategoryController.Delete(System.Int32)">
            <summary>
            Delete news category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all news (all status) for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get news by category slug (all status) for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.FindById(System.Int32)">
            <summary>
            Get news by ID (all status) for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.FindBySlug(System.String)">
            <summary>
            Get news by slug (all status) for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.Create(AttechServer.Applications.UserModules.Dtos.News.CreateNewsDto)">
            <summary>
            Create new news with all data in one request (FormData)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateNewsDto)">
            <summary>
            Update news (handles text + files)
            ID được truyền qua route parameter, FE không cần gửi ID trong body
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.Delete(System.Int32)">
            <summary>
            Delete news
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.CreateAlbum(AttechServer.Applications.UserModules.Dtos.News.CreateAlbumDto)">
            <summary>
            Create album (news with IsAlbum = true)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.GetAlbums(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all albums for admin management (all status)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.GetAlbumById(System.Int32)">
            <summary>
            Get album detail by ID for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.GetGalleryBySlug(System.String)">
            <summary>
            Get news gallery by slug
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.UpdateAlbum(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateAlbumDto)">
            <summary>
            Update album (simplified version for albums only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.CreateDocument(AttechServer.Applications.UserModules.Dtos.News.CreateDocumentDto)">
            <summary>
            Create document (news với IsDocument = true)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.GetDocuments(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all documents for admin management (all status)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.GetDocumentById(System.Int32)">
            <summary>
            Get document detail by ID for admin
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NewsController.UpdateDocument(System.Int32,AttechServer.Applications.UserModules.Dtos.News.UpdateDocumentDto)">
            <summary>
            Update document (simplified version for documents only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all notification categories with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationCategoryController.FindById(System.Int32)">
            <summary>
            Get notification category by ID with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationCategoryController.Create(AttechServer.Applications.UserModules.Dtos.NotificationCategory.CreateNotificationCategoryDto)">
            <summary>
            Create new notification category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationCategoryController.Update(AttechServer.Applications.UserModules.Dtos.NotificationCategory.UpdateNotificationCategoryDto)">
            <summary>
            Update notification category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationCategoryController.Delete(System.Int32)">
            <summary>
            Delete notification category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all notifications with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get notifications by category slug with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.FindById(System.Int32)">
            <summary>
            Get notification by ID with attachments included
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.FindBySlug(System.String)">
            <summary>
            Get notification by slug with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.Create(AttechServer.Applications.UserModules.Dtos.Notification.CreateNotificationDto)">
            <summary>
            Create new notification with all data in one request (FormData)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Notification.UpdateNotificationDto)">
            <summary>
            Update notification (handles text + files)
            ID được truyền qua route parameter, FE không cần gửi ID trong body
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.NotificationController.Delete(System.Int32)">
            <summary>
            Delete notification
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductCategoryController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all product categories with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductCategoryController.FindById(System.Int32)">
            <summary>
            Get product category by ID with caching (Admin only)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductCategoryController.Create(AttechServer.Applications.UserModules.Dtos.ProductCategory.CreateProductCategoryDto)">
            <summary>
            Create new product category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductCategoryController.Update(AttechServer.Applications.UserModules.Dtos.ProductCategory.UpdateProductCategoryDto)">
            <summary>
            Update product category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductCategoryController.Delete(System.Int32)">
            <summary>
            Delete product category
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all products with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.FindAllByCategorySlug(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto,System.String)">
            <summary>
            Get products by category slug with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.FindById(System.Int32)">
            <summary>
            Get product by ID with attachments included
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.FindBySlug(System.String)">
            <summary>
            Get product by slug with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.Create(AttechServer.Applications.UserModules.Dtos.Product.CreateProductDto)">
            <summary>
            Create new product with all data in one request (FormData)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Product.UpdateProductDto)">
            <summary>
            Update product (handles text + files)
            ID được truyền qua route parameter, FE không cần gửi ID trong body
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ProductController.Delete(System.Int32)">
            <summary>
            Delete product
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.RoleController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Role list
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.RoleController.FindById(System.Int32)">
            <summary>
            Role details
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.RoleController.Create(AttechServer.Applications.UserModules.Dtos.Role.CreateRoleDto)">
            <summary>
            Create role
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.RoleController.Update(AttechServer.Applications.UserModules.Dtos.Role.UpdateRoleDto)">
            <summary>
            Update role
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.RoleController.Delete(System.Int32)">
            <summary>
            Delete role
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get all services with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.FindById(System.Int32)">
            <summary>
            Get service by ID with attachments included
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.FindBySlug(System.String)">
            <summary>
            Get service by slug with caching
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.Create(AttechServer.Applications.UserModules.Dtos.Service.CreateServiceDto)">
            <summary>
            Create new service with all data in one request
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.Update(System.Int32,AttechServer.Applications.UserModules.Dtos.Service.UpdateServiceDto)">
            <summary>
            Update service (handles text + files)
            ID được truyền qua route parameter, FE không cần gửi ID trong body
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.ServiceController.Delete(System.Int32)">
            <summary>
            Delete service
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.UploadSetting(System.String,AttechServer.Applications.UserModules.Dtos.Setting.UploadSettingDto)">
            <summary>
            Upload file cho bất kỳ setting nào (banner1, banner2, logo, etc.)
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.GetSetting(System.String)">
            <summary>
            Lấy file của một setting cụ thể
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.GetAllSettings">
            <summary>
            Lấy tất cả settings đã được định nghĩa
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.GetMultipleSettings(System.Collections.Generic.List{System.String})">
            <summary>
            Lấy nhiều settings cùng lúc
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.DeleteSetting(System.String)">
            <summary>
            Xóa một setting
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.SettingController.GetSettingTypes">
            <summary>
            Lấy danh sách tất cả setting types có thể dùng
            </summary>
        </member>
        <member name="T:AttechServer.Controllers.UserController">
            <summary>
            User Management Controller
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.UserController.FindAll(AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto)">
            <summary>
            Get user list
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.UserController.FindById(System.Int32)">
            <summary>
            Get user details by ID
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.UserController.Update(AttechServer.Applications.UserModules.Dtos.User.UpdateUserDto)">
            <summary>
            Edit user details
            </summary>
        </member>
        <member name="M:AttechServer.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Delete user
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Contact.Status">
            <summary>
            Trạng thái: 0 = Chưa đọc, 1 = Đã đọc
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Contact.SubmittedAt">
            <summary>
            Thời gian gửi liên hệ
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Contact.IpAddress">
            <summary>
            IP Address của người gửi (optional, cho security tracking)
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Contact.UserAgent">
            <summary>
            User Agent của browser (optional, cho security tracking)
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Gallery.Status">
            <summary>
            Trạng thái
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.News.Status">
            <summary>
            Trạng thái
            <see cref="!:CommonStatus"/>
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Notification.Status">
            <summary>
            Trạng thái
            <see cref="T:AttechServer.Shared.Consts.CommonStatus"/>
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Product.Status">
            <summary>
            Trạng thái
            <see cref="T:AttechServer.Shared.Consts.CommonStatus"/>
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Main.Service.Status">
            <summary>
            Trạng thái
            <see cref="T:AttechServer.Shared.Consts.CommonStatus"/>
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.Role.Status">
            <summary>
            Tr?ng th�i role
            <see cref="!:CommonStatus"/>
            </summary>
        </member>
        <member name="P:AttechServer.Domains.Entities.User.Status">
            <summary>
            Tr?ng th�i
            <see cref="P:AttechServer.Domains.Entities.User.Status"/>
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.ContentProcessing.WysiwygFileProcessor.ExtractAttachmentIdsAsync(System.String)">
            <summary>
            Extract attachment IDs from HTML content
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.ContentProcessing.WysiwygFileProcessor.ExtractUniqueAttachmentIdsAsync(System.String,System.String)">
            <summary>
            Extract unique attachment IDs from both ContentVi and ContentEn
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.ContentProcessing.WysiwygFileProcessor.HasTempFilesInContent(System.String)">
            <summary>
            Check if content contains temp files
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.Mail.IEmailService.SendEmailAsync(AttechServer.Infrastructures.Mail.EmailRequest)">
            <summary>
            Send single email
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.Mail.IEmailService.SendBulkEmailAsync(System.Collections.Generic.List{AttechServer.Infrastructures.Mail.EmailRequest})">
            <summary>
            Send multiple emails
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.Mail.IEmailService.SendTemplateEmailAsync(System.String,System.Object,AttechServer.Infrastructures.Mail.EmailRequest)">
            <summary>
            Send email with template
            </summary>
        </member>
        <member name="M:AttechServer.Infrastructures.Mail.IEmailService.TestConnectionAsync">
            <summary>
            Test SMTP connection
            </summary>
        </member>
        <member name="T:AttechServer.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Migrations.SimplifyRoleSystem">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.SimplifyRoleSystem.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.SimplifyRoleSystem.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.SimplifyRoleSystem.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Migrations.AddIsDocumentColumn">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddIsDocumentColumn.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddIsDocumentColumn.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddIsDocumentColumn.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Migrations.AddContact">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddContact.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddContact.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddContact.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Migrations.AddPhoneNumberToContact">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneNumberToContact.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneNumberToContact.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneNumberToContact.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Migrations.AddPhoneToContact">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneToContact.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneToContact.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:AttechServer.Migrations.AddPhoneToContact.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:AttechServer.Services.TempFileCleanupBackgroundService">
            <summary>
            Background service để dọn dẹp file tạm thời và record Attachment quá hạn (Logic 3)
            - Xóa file vật lý cũ hơn 24 giờ
            - Xóa record temporary trong database
            - Dọn dẹp orphaned files không có record
            </summary>
        </member>
        <member name="M:AttechServer.Services.TempFileCleanupBackgroundService.CleanupOrphanedTempFiles">
            <summary>
            Dọn dẹp file trong thư mục temp không có record trong DB
            </summary>
        </member>
        <member name="T:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto">
            <summary>
            Base class for pagination request DTOs
            </summary>
        </member>
        <member name="F:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.DEFAULT_PAGE_SIZE">
            <summary>
            Default number of items per page
            </summary>
        </member>
        <member name="F:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.MIN_PAGE_SIZE">
            <summary>
            Minimum number of items per page
            </summary>
        </member>
        <member name="F:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.MAX_PAGE_SIZE">
            <summary>
            Maximum number of items per page
            </summary>
        </member>
        <member name="F:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.ALL_ITEMS">
            <summary>
            Special value to get all items
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.PageSize">
            <summary>
            Number of items per page. Use -1 to get all items
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.PageNumber">
            <summary>
            Page number (1-based)
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.Page">
            <summary>
            Page property for backward compatibility
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.Keyword">
            <summary>
            Search keyword
            </summary>
        </member>
        <member name="M:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.GetSkip">
            <summary>
            Calculate number of items to skip based on page size and number
            </summary>
            <returns>Number of items to skip</returns>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.SortBy">
            <summary>
            Sort field name
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.SortDirection">
            <summary>
            Sort direction: "asc" or "desc"
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.Sort">
            <summary>
            Multiple sort parameters (format: "field1:asc,field2:desc")
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.IsAscending">
            <summary>
            Check if sort direction is ascending
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.CategoryId">
            <summary>
            Filter by category ID
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.Status">
            <summary>
            Filter by status
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.DateFrom">
            <summary>
            Filter by date from
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.DateTo">
            <summary>
            Filter by date to
            </summary>
        </member>
        <member name="P:AttechServer.Shared.ApplicationBase.Common.PagingRequestBaseDto.IsOutstanding">
            <summary>
            Filter by outstanding items
            </summary>
        </member>
        <member name="T:AttechServer.Shared.ApplicationBase.Common.SettingType">
            <summary>
            Enum định nghĩa các loại setting có thể có
            </summary>
        </member>
        <member name="M:AttechServer.Shared.ApplicationBase.Common.SettingTypeExtensions.ToObjectId(System.String)">
            <summary>
            Chuyển setting key string thành objectId để lưu trong attachment
            </summary>
        </member>
        <member name="M:AttechServer.Shared.ApplicationBase.Common.SettingTypeExtensions.GetDescription(AttechServer.Shared.ApplicationBase.Common.SettingType)">
            <summary>
            Lấy description của setting type
            </summary>
        </member>
        <member name="T:AttechServer.Shared.ApplicationBase.Common.Validations.IntegerRangeAttribute">
            <summary>
            Cho phép m?t trong các giá tr?, n?u là null thì b? qua
            </summary>
        </member>
        <member name="T:AttechServer.Shared.Attributes.CacheResponseAttribute">
            <summary>
            Custom response caching attribute with configurable cache duration and cache keys
            </summary>
        </member>
        <member name="T:AttechServer.Shared.Attributes.CacheProfiles">
            <summary>
            Cache configuration options
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Attributes.CacheProfiles.ShortCache">
            <summary>
            Short cache for frequently changing data (1 minute)
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Attributes.CacheProfiles.MediumCache">
            <summary>
            Medium cache for moderately changing data (5 minutes)
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Attributes.CacheProfiles.LongCache">
            <summary>
            Long cache for rarely changing data (15 minutes)
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Attributes.CacheProfiles.ExtraLongCache">
            <summary>
            Extra long cache for very stable data (1 hour)
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Attributes.CacheProfiles.VeryShortCache">
            <summary>
            Very short cache for highly dynamic data (30 seconds)
            </summary>
        </member>
        <member name="P:AttechServer.Shared.Configurations.UploadOptions.UploadEndpoint">
            <summary>
            Upload endpoint for TinyMCE - Dedicated endpoint for editor uploads
            </summary>
        </member>
        <member name="T:AttechServer.Shared.Consts.UserLevels">
            <summary>
            Cấp độ người dùng trong hệ thống
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Consts.UserLevels.SYSTEM">
            <summary>
            System Administrator - Quản trị viên hệ thống
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Consts.UserLevels.MANAGER">
            <summary>
            Manager/Admin - Quản lý/Quản trị viên
            </summary>
        </member>
        <member name="F:AttechServer.Shared.Consts.UserLevels.STAFF">
            <summary>
            Staff/Editor - Nhân viên/Biên tập viên
            </summary>
        </member>
        <member name="T:AttechServer.Shared.Filters.SuperAdminProtectionFilter">
            <summary>
            Filter bảo vệ theo Strict Hierarchy: SuperAdmin và Admin
            </summary>
        </member>
        <member name="M:AttechServer.Shared.Utils.PasswordHasher.VerifyPassword(System.String,System.String)">
            <summary>
            Ki?m tra thông tin
            </summary>
            <param name="password">M?t kh?u chua du?c mã hóa</param>
            <param name="hashedPassword">M?t mã dã du?c mã hóa</param>
            <returns></returns>
        </member>
    </members>
</doc>
