{
  "openapi": "3.0.4",
  "info": {
    "title": "Attech Web API",
    "version": "v1"
  },
  "paths": {
    "/api/api-endpoint/find-all": {
      "get": {
        "tags": [
          "ApiEndpoint"
        ],
        "summary": "Get api endpoint list",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/api-endpoint/find-by-id/{id}": {
      "get": {
        "tags": [
          "ApiEndpoint"
        ],
        "summary": "Get API Endpoint by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/api-endpoint/create": {
      "post": {
        "tags": [
          "ApiEndpoint"
        ],
        "summary": "Create new API Endpoint",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiEndpointDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiEndpointDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiEndpointDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/api-endpoint/update": {
      "put": {
        "tags": [
          "ApiEndpoint"
        ],
        "summary": "Update API Endpoint",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiEndpointDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiEndpointDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiEndpointDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/api-endpoint/delete/{id}": {
      "delete": {
        "tags": [
          "ApiEndpoint"
        ],
        "summary": "Delete API Endpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "RelationType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "RelationType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/associate": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachAssociationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachAssociationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachAssociationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/{id}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/entity/{objectType}/{objectId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/cleanup": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Cleanup temp files older than specified hours (background task endpoint)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create user (only for admin)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh token",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user info",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log out",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/overview": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/users": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/content": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/system": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/activities": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/monitoring": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/health": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/charts/{chartType}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "chartType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/all": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/realtime": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health check endpoint for monitoring",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/health/detailed": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Detailed health check with database connectivity",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/news/find-all": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all news with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/category/{slug}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news by category slug with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/find-by-id/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news by ID with attachments included",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/detail/{slug}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news by slug with caching",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/create": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create new news with all data in one request (FormData)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/update": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update news (handles text + files)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/delete/{id}": {
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete news",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/create-album": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create album (news with IsAlbum = true)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AttachmentIds",
                  "TitleVi"
                ],
                "type": "object",
                "properties": {
                  "TitleVi": {
                    "type": "string"
                  },
                  "TitleEn": {
                    "type": "string"
                  },
                  "NewsCategoryId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "AttachmentIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "encoding": {
                "TitleVi": {
                  "style": "form"
                },
                "TitleEn": {
                  "style": "form"
                },
                "NewsCategoryId": {
                  "style": "form"
                },
                "AttachmentIds": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/albums": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all albums (news where IsAlbum = true)",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/albums/slug/{slug}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get album detail by slug (SEO friendly)",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/gallery/{slug}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news gallery by slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news-category/find-all": {
      "get": {
        "tags": [
          "NewsCategory"
        ],
        "summary": "Get all news categories with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news-category/find-by-id/{id}": {
      "get": {
        "tags": [
          "NewsCategory"
        ],
        "summary": "Get news category by ID with caching",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news-category/create": {
      "post": {
        "tags": [
          "NewsCategory"
        ],
        "summary": "Create new news category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news-category/update": {
      "put": {
        "tags": [
          "NewsCategory"
        ],
        "summary": "Update news category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/news-category/delete/{id}": {
      "delete": {
        "tags": [
          "NewsCategory"
        ],
        "summary": "Delete news category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/find-all": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all notification with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/category/{slug}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification by category slug with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/find-by-id/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification by ID with attachments included",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/detail/{slug}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification by slug with caching",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/create": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Create new notification with all data in one request (FormData)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/update": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Update notification (handles text + files)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/delete/{id}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Delete notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-category/find-all": {
      "get": {
        "tags": [
          "NotificationCategory"
        ],
        "summary": "Get all notification categories with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-category/find-by-id/{id}": {
      "get": {
        "tags": [
          "NotificationCategory"
        ],
        "summary": "Get notification category by ID with caching",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-category/create": {
      "post": {
        "tags": [
          "NotificationCategory"
        ],
        "summary": "Create new notification category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-category/update": {
      "put": {
        "tags": [
          "NotificationCategory"
        ],
        "summary": "Update notification category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification-category/delete/{id}": {
      "delete": {
        "tags": [
          "NotificationCategory"
        ],
        "summary": "Delete notification category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/list": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Role list",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/current-user": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get permissions by current user ID",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/check": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Check permission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/tree": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get all key permissions in tree structure",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get detail permission by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Delete key permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Create key permission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyPermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyPermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyPermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission"
        ],
        "summary": "Update key permission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKeyPermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKeyPermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKeyPermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/api-endpoint": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Add permission with endpoint",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionApiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionApiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionApiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission"
        ],
        "summary": "Update api endpoint with permission key",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionConfigDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionConfigDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/api-endpoints": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Api endpoint list",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permission/api-endpoints/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get api endpoint detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/find-all": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all product with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/category/{slug}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by category slug with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/find-by-id/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by ID with attachments included",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/detail/{slug}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by slug with caching",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create new product with all data in one request (FormData)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/update": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update product (handles text + files)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product/delete/{id}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product-category/find-all": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get all product categories with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product-category/find-by-id/{id}": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get product category by ID with caching",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product-category/create": {
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Create new product category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product-category/update": {
      "put": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Update product category",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/product-category/delete/{id}": {
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Delete product category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/find-all": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Role list",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/find-by-id/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Role details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/permissions/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get permission by role id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/create": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create role",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/update": {
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Update role",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/delete/{id}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/find-all": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get all services with caching",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/find-by-id/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get service by ID with attachments included",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/detail/{slug}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get service by slug with caching",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/create": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create new service with all data in one request",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/update": {
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update service (handles text + files)",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/delete/{id}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Translate": {
      "post": {
        "tags": [
          "Translate"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user list",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page. Use -1 to get all items",
            "schema": {
              "maximum": 100,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page property for backward compatibility",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "Sort parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit user details",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}/roles/{roleId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add role to user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Remove role from user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Used for permissions in an API that is called in many places",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ApiStatusCode"
          },
          "data": {
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiStatusCode": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "AttachAssociationDto": {
        "type": "object",
        "properties": {
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/ObjectType"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateApiEndpointDto": {
        "required": [
          "httpMethod",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "httpMethod": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "requireAuthentication": {
            "type": "boolean"
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateKeyPermissionDto": {
        "type": "object",
        "properties": {
          "permissionKey": {
            "type": "string",
            "nullable": true
          },
          "permissionLabel": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderPriority": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateNewsCategoryDto": {
        "required": [
          "slugEn",
          "slugVi",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "slugEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateNewsDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "newsCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationCategoryDto": {
        "required": [
          "slugEn",
          "slugVi",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "slugEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "notificationCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePermissionApiDto": {
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "permissionKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKeyPermissionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductCategoryDto": {
        "required": [
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "type": "string",
            "nullable": true
          },
          "slugEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProductDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "productCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateServiceDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "required": [
          "email",
          "fullName",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          },
          "fullName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 20,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "userLevel": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          106,
          999
        ],
        "type": "integer",
        "format": "int32"
      },
      "TokenApiDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslateRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateApiEndpointDto": {
        "required": [
          "httpMethod",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "httpMethod": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "requireAuthentication": {
            "type": "boolean"
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateKeyPermissionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "permissionKey": {
            "type": "string",
            "nullable": true
          },
          "permissionLabel": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderPriority": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateNewsCategoryDto": {
        "required": [
          "id",
          "slugEn",
          "slugVi",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "slugEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateNewsDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "id",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "newsCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationCategoryDto": {
        "required": [
          "id",
          "slugEn",
          "slugVi",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "slugEn": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "id",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "notificationCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePermissionConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "permissionKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateKeyPermissionDto"
            },
            "nullable": true
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProductCategoryDto": {
        "required": [
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "titleVi": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "slugVi": {
            "type": "string",
            "nullable": true
          },
          "slugEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descriptionEn": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateProductDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "id",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "productCategoryId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateServiceDto": {
        "required": [
          "contentVi",
          "descriptionVi",
          "id",
          "slugEn",
          "slugVi",
          "timePosted",
          "titleVi"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titleVi": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "titleEn": {
            "type": "string",
            "nullable": true
          },
          "descriptionVi": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string"
          },
          "descriptionEn": {
            "maxLength": 700,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentVi": {
            "minLength": 1,
            "type": "string"
          },
          "contentEn": {
            "type": "string",
            "nullable": true
          },
          "timePosted": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isOutstanding": {
            "type": "boolean"
          },
          "slugVi": {
            "minLength": 1,
            "type": "string"
          },
          "slugEn": {
            "minLength": 1,
            "type": "string"
          },
          "featuredImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "fullName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "userLevel": {
            "type": "integer",
            "format": "int32"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}